name: Organization => Publish on NPM

on:
    repository_dispatch:
        types: [org-workflow-bot]

jobs:
    register:
        runs-on: ubuntu-latest
        steps:
            - uses: SvanBoxel/organization-workflow@main
              with:
                  id: ${{ github.event.client_payload.id }}
                  callback_url: ${{ github.event.client_payload.callback_url }}
                  sha: ${{ github.event.client_payload.sha }}
                  run_id: ${{ github.run_id }}
                  name: ${{ github.workflow }}

            - name: Checkout
              uses: actions/checkout@v2.3.4
              with:
                  repository: ${{ github.event.client_payload.repository.full_name }}
                  ref: ${{ github.event.client_payload.sha }}
                  token: ${{ github.event.client_payload.token }}

            # Setup Node

            - name: Setup Node
              uses: actions/setup-node@v2
              with:
                  node-version: 15.9.0
                  check-latest: true
                  registry-url: "https://registry.npmjs.org"

            # Setup Pnpm and run pnpm install

            - name: Create cache pnpm modules
              uses: actions/cache@v2
              env:
                  cache-name: cache-pnpm-modules
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

            - name: Setup Pnpm
              # Using actions/setup-node@v2 you need to install pnpm with root permissions, eg:sudo npm install -g pnpm.
              # Alternatively, if you specify the Node.js version to use, pnpm may be installed with no priviledged user
              run: curl -f https://get.pnpm.io/v6.7.js | node - add --global pnpm@6

              # Runs pnpm build

            - name: Pnpm Install
              run: pnpm install --frozen-lockfile=false

            - name: Pnpm Build
              run: pnpm build

            # Publish on NPM Repository

            - id: publish
              name: publish
              uses: JS-DevTools/npm-publish@v1
              with:
                  token: ${{ secrets.NPM_TOKEN }}
                  access: public
                  check-version: true

            - if: steps.publish.outputs.type != 'none'
              run: |
                  echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
                  echo "Tag => ${{ steps.publish.outputs.tag }} / Access => ${{ steps.publish.outputs.access }}"
